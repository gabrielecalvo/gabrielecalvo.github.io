[{"content":"tENVplate: a simple .env template filler When cloning a project I often found it annoying that, even if a .env.template file is available, one still needs to ask for a \u0026ldquo;filled\u0026rdquo; version or chase down the values of the secrets on your own.\nWouldn\u0026rsquo;t it be easier to create the template with a reference to the vault service used to store the secrets?\nLast weekend I managed to create a simple tool that tries to address that pain point for anyone currently using azure keyvault or k8s.\nHope people find it as useful as I do: https://github.com/gabrielecalvo/tenvplate\n","date":"2024-05-20T00:00:00Z","image":"https://gabrielecalvo.github.io/p/tenvplate/cover_hu3d03a01dcc18bc5be0e67db3d8d209a6_86955_120x120_fill_q75_box_smart1.jpg","permalink":"https://gabrielecalvo.github.io/p/tenvplate/","title":"tENVplate"},{"content":"Data Hackathons WebApp As a weekend project, I created a simple fast-api based app which can be self-hosted were users can:\nbe automatically identified through the auth mechanism (currently azure ad on azure webapp supported) browse all published competitions, with their tags see a competition page with: a description of the competition and the evaluation metric links to the training data links to the evaluation dataset and the submission template submission form leaderboard of previous submissions with score and submission count. ","date":"2023-10-01T12:24:07+01:00","image":"https://gabrielecalvo.github.io/p/data-hackathons-app/cover_hue28f6063011075588f6e090378c97121_39281_120x120_fill_box_smart1_3.png","permalink":"https://gabrielecalvo.github.io/p/data-hackathons-app/","title":"Data Hackathons App"},{"content":"After a long pause, the Python Glasgow Meetup has finally re-started organising events üòÑ\nAs the organisers were looking for talks, I agreed to give one on a library that I found very useful: Dagster.\nI\u0026rsquo;ll let the slides and references below give more insight.\nI look forward for the next event!\nReferences:\nPresentation Slides Python Glasgow LinkedIn post GitHub repo with all the material ","date":"2023-05-23T00:00:00Z","image":"https://gabrielecalvo.github.io/p/python-glasgow-meetup-dagster/cover_hue5f109fa584913734a95cbe3a16718d9_470782_120x120_fill_q75_box_smart1.jpg","permalink":"https://gabrielecalvo.github.io/p/python-glasgow-meetup-dagster/","title":"Python Glasgow Meetup - Dagster"},{"content":"Shadow Flicker AI model I had the chance to attend the last Wind Europe Annual Conference thanks to contributing to the Dynamic Flicker Optimisation System.\nIt is a very interesting project using neural network to detect periods of clear sky and prevent shadow flicker.\nThe poster presentation is available online on the Wind Europe website, so if you are interested in hearing me describe the system, that\u0026rsquo;s your chance. üòã\n","date":"2022-04-07T00:00:00Z","image":"https://gabrielecalvo.github.io/p/shadow-flicker-ai-model/cover_hu97180fffc37ff38e433a50538f8c3034_244342_120x120_fill_q75_box_smart1.jpg","permalink":"https://gabrielecalvo.github.io/p/shadow-flicker-ai-model/","title":"Shadow Flicker AI model"},{"content":"Language4Water Python Course for Beginners When working in a team, often we often rotate roles. For example to organise a monthly meeting or a weekly presentation.\nSome teams use a more fully fledged, database-backed, wheel like this one, but if you are looking for something simpler and without the need to spin up databases and servers, then this tool I created might be a good option: https://github.com/gabrielecalvo/random-picker\n","date":"2021-12-27T00:00:00Z","image":"https://gabrielecalvo.github.io/p/random-picker/cover_hu4a45c43b396c0728ac7d65b1e03f40ac_51922_120x120_fill_box_smart1_3.png","permalink":"https://gabrielecalvo.github.io/p/random-picker/","title":"Random Picker"},{"content":"Guide to Streamlit on Azure Streamlit is a python library that allows for quick WebApp development for relatively simple applications. It provides common widgets and simple procedural logic.\nIn this guide, we will deploy a barebone app that I recommend using as your starting point if you want to deploy to Azure App Service. I have found the deployment to be a little tempremental so I hope this can help you.\nI\u0026rsquo;ve taken information from here, though that alone did not work for me. Cloning and deploying this worked, but I then simplified it and updated versions to get this guide.\nDownloading the barebone app I\u0026rsquo;ve prepared all the files you\u0026rsquo;ll need to get a start here\nCreating Azure Resources The following resources have to be created:\nresource group azure container registry app service You can create basic level of them using the azure cli as shown below. I will assume you are using bash. I usually prefer setting the variables once and using them in all future commands. The ones you will need are:\n1 2 3 4 5 6 export LOCATION=\u0026#34;xxx\u0026#34; export RESOURCE_GROUP=\u0026#34;xxx\u0026#34; export CONTAINER_REGISTRY=\u0026#34;xxx\u0026#34; export IMAGE_NAME=\u0026#34;xxx\u0026#34; export WEBAPP_NAME=\u0026#34;xxx\u0026#34; export SERVICE_PLAN_NAME=\u0026#34;xxx\u0026#34; To see all possible locations use az account list-locations\nRemember that WEBAPP_NAME will go in the url (https://WEBAPP_NAME.azurewebsites.net) so it needs to be unique across all azurewebsites.\nThe resource-creating commands are:\nresource group: az group create -l $LOCATION -n $RESOURCE_GROUP azure container registry: az acr create --name $CONTAINER_REGISTRY --resource-group $RESOURCE_GROUP --sku basic --admin-enabled true app service: az appservice plan create -g $RESOURCE_GROUP -n $SERVICE_PLAN_NAME -l $LOCATION --is-linux --sku B1 If you get authorisation errors, make sure you are logged in (az login and az acr login -n $CONTAINER_REGISTRY)\nOnce those resources are set-up, we move on to building the image (remotely) and creating the web app based on it\n1 2 az acr build --registry $CONTAINER_REGISTRY --resource-group $RESOURCE_GROUP --image $IMAGE_NAME . az webapp create -g $RESOURCE_GROUP -p $SERVICE_PLAN_NAME -n $WEBAPP_NAME -i $CONTAINER_REGISTRY.azurecr.io/$IMAGE_NAME:latest Local Development In order to speed up development it is usually better to build and test the image by using docker locally\n1 2 3 4 5 # locally build the test image docker build -t tst . # test the image locally docker run --rm -it -p 80:80 tst Pushing the image to the Container Registry Pushing the image will trigger an update of the WebApp on the next request.\n1 2 3 # re-tag the image and push it to the repository docker image tag tst $CONTAINER_REGISTRY.azurecr.io/$IMAGE_NAME:latest docker push $CONTAINER_REGISTRY.azurecr.io/$IMAGE_NAME:latest The update can be a bit fiddly, so I usually prefer restarting the app from the Azure Web UI to be sure and monitor the Log Stream.\nFuther Considerations There are a couple of things to bear in mind:\nThe way the webapp defaults, it will be available to the internet unless authorisation is specified. The Dockerfile is in its simplest form. When opening the website to the internet there are security concerns to address, here is a nice overview. ","date":"2021-05-07T00:00:00Z","image":"https://gabrielecalvo.github.io/p/streamlit-on-azure/cover_hu8755b84b08bcf49e70ae03ef24d7c1e5_16819_120x120_fill_box_smart1_3.png","permalink":"https://gabrielecalvo.github.io/p/streamlit-on-azure/","title":"Streamlit on Azure"},{"content":"In the summer of 2020 I have been spending some free time developing a collaborative decision-making webapp called \u0026ldquo;Uppoint\u0026rdquo;.\nThe elevator pitch goes something like this:\nInstead of degrading into quarrels üò° or leaving it to the loudest üì£individual, let the group see all the options üìú and let each voter order them by preference ‚òùÔ∏è. Our system will do the rest üòâ Some Features:\nAbility to allow a set number of vetos ‚ùå Local üìç or remote üìß voting Election status page üìä 5 voting methods ‚öôÔ∏è to choose from You can find it at http://gabecloud.hopto.org:8100!\n","date":"2020-08-21T00:00:00Z","image":"https://gabrielecalvo.github.io/p/uppoint/cover_hu5f9748ba4fac6c37330ad5bdfeb2ee7f_76313_120x120_fill_box_smart1_3.png","permalink":"https://gabrielecalvo.github.io/p/uppoint/","title":"Uppoint"},{"content":"During my previous job, I was constantly trying to push for more adoption of python and its awesome libraries. As a Data Analyst, the main one was obviously pandas!\nIn order to get people more familiar and confident using the internal tools and libraries I decided to prepare training material focused on pandas. The tutorial goes throught the main features of pandas and includes exercises and a final capstone project to test your skills.\nYou can find the material here under MIT Licence.\n","date":"2020-01-26T00:00:00Z","image":"https://gabrielecalvo.github.io/p/pandas-tutorial-with-exercises/cover_hu06fc37a9d58c1f1d675edf0752ec1c23_32353_120x120_fill_box_smart1_3.png","permalink":"https://gabrielecalvo.github.io/p/pandas-tutorial-with-exercises/","title":"Pandas Tutorial (with exercises)"},{"content":"Language4Water Python Course for Beginners L4W is a charity that organises language courses whose profit go towards providing world\u0026rsquo;s poorest people with access to clean water, sanitation and hygiene services.\nI heard about it a few years ago from a friend and have joined as a student and I decided to ask if they were interested in having a programming language as a course. They were very nice and open to it so here I am now teaching python to beginners.\nI am constantly changing and refining the material here. And the previous courses can be found in the \u0026ldquo;archive\u0026rdquo; folder.\n","date":"2019-12-11T00:00:00Z","image":"https://gabrielecalvo.github.io/p/python-course-@-language4water/cover_hu6e9d03424bba9dfec2ca882832407c64_39633_120x120_fill_box_smart1_3.png","permalink":"https://gabrielecalvo.github.io/p/python-course-@-language4water/","title":"Python Course @ Language4Water"},{"content":"Wind Data Analysis Toolbox I\u0026rsquo;ve been working on a couple of python libraries that simplify some aspects of wind analysis:\nWindDataDownloader: simplifies dowloading of MERRA2 and NCDC data. windtools: currently only handing wind rose generation. ","date":"2019-06-17T00:00:00Z","image":"https://gabrielecalvo.github.io/p/wind-data-analysis-toolbox/cover_hu3d03a01dcc18bc5be0e67db3d8d209a6_712413_120x120_fill_q75_box_smart1.jpg","permalink":"https://gabrielecalvo.github.io/p/wind-data-analysis-toolbox/","title":"Wind Data Analysis Toolbox"},{"content":"I worked on a demo image to have jupyterlab working inside docker and accessible from the host machine.\nThe documentation and usage is detailed here.\nBut I\u0026rsquo;d like to take a moment to summerise some pros of this solution:\nIt allows a standardised development environment. It ensure any analysis performed in it is fully repeatable. It runs on pretty much any machine that runs docker. If you screw things up, you can delete the container and start from a brand new one. To keep data you just need to mount a volume (as explained in the documentation). You can install libraries that only run on linux. ","date":"2019-03-05T00:00:00Z","image":"https://gabrielecalvo.github.io/p/docker-data-analysis-image/cover_huef06ac17505da733bd2e467f779dfeaa_54999_120x120_fill_box_smart1_3.png","permalink":"https://gabrielecalvo.github.io/p/docker-data-analysis-image/","title":"Docker Data Analysis Image"}]